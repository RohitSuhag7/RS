[2020-09-01 09:41:09,990] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-09-01 09:41:49,404] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 09:41:49,496] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2020-09-01 09:41:49,497] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-09-01 09:41:49,504] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-09-01 09:41:49,513] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-09-01 09:41:49,522] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-09-01 09:41:49,530] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 214) (kafka.controller.KafkaController)
[2020-09-01 09:41:49,543] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 09:41:49,604] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-09-01 09:41:49,643] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-09-01 09:41:49,651] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-09-01 09:41:49,652] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-09-01 09:41:49,652] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trump, MyTopic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-09-01 09:41:49,652] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-09-01 09:41:49,660] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-09-01 09:41:49,660] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-09-01 09:41:49,660] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-09-01 09:41:49,661] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-09-01 09:41:49,662] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-09-01 09:41:49,710] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 09:41:49,720] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 09:41:49,720] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-01 09:41:49,755] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 09:41:49,756] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=trump,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=MyTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 09:41:49,757] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 09:41:49,764] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 09:41:49,776] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, MyTopic-0 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, trump-0 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 09:41:49,776] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2020-09-01 09:41:49,783] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 09:41:49,784] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 09:41:49,784] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-09-01 09:41:49,784] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-09-01 09:41:49,786] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-09-01 09:41:49,838] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-09-01 09:41:54,839] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 09:41:54,840] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 09:41:54,849] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 09:41:54,850] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 09:46:54,852] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 09:46:54,853] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 09:46:54,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 09:46:54,861] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 09:51:54,862] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 09:51:54,862] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 09:51:54,874] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 09:51:54,874] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 09:56:54,875] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 09:56:54,876] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 09:56:54,889] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 09:56:54,889] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:01:54,891] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:01:54,892] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:01:54,896] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:01:54,896] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:06:54,897] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:06:54,897] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:06:54,902] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:06:54,902] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:11:54,903] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:11:54,904] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:11:54,914] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:11:54,914] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:12:49,810] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-09-01 10:12:49,812] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-09-01 10:12:49,813] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-09-01 10:12:49,824] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),MyTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),trump-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-09-01 10:12:54,954] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 10:12:54,961] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 10:12:54,961] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 10:12:54,966] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-09-01 10:12:54,970] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 10:12:54,980] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 10:12:54,986] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 10:12:54,987] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-09-01 10:12:54,988] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-09-01 10:12:54,988] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-09-01 10:12:55,008] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-09-01 10:25:13,681] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-09-01 10:30:51,929] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 10:30:51,979] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2020-09-01 10:30:51,980] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-09-01 10:30:51,988] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-09-01 10:30:51,999] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-09-01 10:30:52,004] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-09-01 10:30:52,015] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 233) (kafka.controller.KafkaController)
[2020-09-01 10:30:52,034] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 10:30:52,095] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-09-01 10:30:52,108] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-09-01 10:30:52,110] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-09-01 10:30:52,110] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-09-01 10:30:52,111] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trump, MyTopic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-09-01 10:30:52,111] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-09-01 10:30:52,121] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-09-01 10:30:52,121] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-09-01 10:30:52,122] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-09-01 10:30:52,123] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-09-01 10:30:52,124] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-09-01 10:30:52,134] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 10:30:52,143] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 10:30:52,145] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-01 10:30:52,258] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 10:30:52,259] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=trump,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=MyTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 10:30:52,266] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 10:30:52,282] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 10:30:52,288] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, MyTopic-0 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, trump-0 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 10:30:52,293] INFO [Controller id=1] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2020-09-01 10:30:52,299] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 10:30:52,299] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 10:30:52,299] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-09-01 10:30:52,301] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-09-01 10:30:52,324] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-09-01 10:30:53,299] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-09-01 10:30:58,303] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:30:58,304] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:30:58,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:30:58,346] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:35:58,349] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:35:58,350] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:35:58,359] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:35:58,359] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:40:58,362] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:40:58,362] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:40:58,366] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:40:58,367] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:45:58,367] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:45:58,368] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:45:58,377] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:45:58,377] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:50:58,378] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:50:58,379] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:50:58,392] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:50:58,392] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 10:55:58,394] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 10:55:58,394] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 10:55:58,396] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 10:55:58,396] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:00:58,398] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:00:58,399] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:00:58,402] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:00:58,402] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:05:58,405] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:05:58,405] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:05:58,415] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:05:58,415] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:10:58,418] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:10:58,418] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:10:58,421] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:10:58,421] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:15:58,422] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:15:58,423] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:15:58,431] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:15:58,432] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:20:58,433] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:20:58,433] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:20:58,435] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:20:58,435] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:25:58,437] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:25:58,438] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:25:58,445] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:25:58,445] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:54:50,692] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-09-01 11:54:50,693] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 11:54:50,698] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 11:54:50,700] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 11:54:50,701] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-09-01 11:54:50,702] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-09-01 11:54:50,703] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-09-01 11:54:50,710] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-09-01 11:54:52,374] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2020-09-01 11:54:52,374] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-09-01 11:54:52,376] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-09-01 11:54:52,377] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-09-01 11:54:52,378] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-09-01 11:54:52,381] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 239) (kafka.controller.KafkaController)
[2020-09-01 11:54:52,394] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 11:54:52,427] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-09-01 11:54:52,441] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-09-01 11:54:52,441] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-09-01 11:54:52,442] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trump, MyTopic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-09-01 11:54:52,442] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-09-01 11:54:52,447] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-09-01 11:54:52,447] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-09-01 11:54:52,447] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-09-01 11:54:52,447] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-09-01 11:54:52,447] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-09-01 11:54:52,448] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-09-01 11:54:52,448] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 11:54:52,452] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-01 11:54:52,455] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 11:54:52,473] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 11:54:52,474] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=trump,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=MyTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 11:54:52,474] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 11:54:52,477] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 11:54:52,477] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, MyTopic-0 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, trump-0 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 11:54:52,478] INFO [Controller id=1] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2020-09-01 11:54:52,480] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 11:54:52,480] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 11:54:52,480] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-09-01 11:54:52,480] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-09-01 11:54:52,480] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-09-01 11:54:52,881] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-09-01 11:54:57,883] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:54:57,883] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:54:57,885] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:54:57,885] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 11:59:57,886] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 11:59:57,886] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 11:59:57,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 11:59:57,888] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:04:57,890] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:04:57,891] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:04:57,894] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:04:57,894] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:09:57,896] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:09:57,897] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:09:57,905] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:09:57,906] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:14:57,908] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:14:57,909] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:14:57,919] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:14:57,920] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:19:57,921] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:19:57,922] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:19:57,930] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:19:57,930] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:24:57,933] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:24:57,933] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:24:57,941] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:24:57,941] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:29:57,944] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:29:57,944] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:29:57,949] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:29:57,949] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:34:57,950] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:34:57,951] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:34:57,959] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:34:57,960] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:39:57,962] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:39:57,962] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:39:57,971] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:39:57,971] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:44:57,973] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:44:57,974] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:44:57,982] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:44:57,982] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:49:57,984] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:49:57,985] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:49:57,993] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:49:57,994] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:54:57,997] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:54:57,998] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:54:58,008] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:54:58,009] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 12:59:58,010] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 12:59:58,012] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 12:59:58,018] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 12:59:58,018] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:04:58,020] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:04:58,023] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:04:58,032] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:04:58,032] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:09:58,034] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:09:58,034] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:09:58,040] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:09:58,041] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:14:58,043] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:14:58,043] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:14:58,051] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:14:58,051] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:19:58,054] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:19:58,054] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:19:58,058] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:19:58,058] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:24:58,060] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:24:58,061] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:24:58,066] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:24:58,067] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:29:58,068] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:29:58,069] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:29:58,076] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:29:58,076] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:34:55,835] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-09-01 13:34:55,836] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-09-01 13:34:55,836] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-09-01 13:34:55,847] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),MyTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),trump-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-09-01 13:34:58,079] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:34:58,079] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:34:58,086] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:34:58,086] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:35:00,153] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 13:35:00,155] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 13:35:00,155] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 13:35:00,156] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-09-01 13:35:00,156] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 13:35:00,158] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 13:35:00,158] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 13:35:00,159] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-09-01 13:35:00,159] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-09-01 13:35:00,159] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-09-01 13:35:00,169] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-09-01 13:35:29,694] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-09-01 13:35:41,779] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 13:35:41,847] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2020-09-01 13:35:41,847] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-09-01 13:35:41,860] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-09-01 13:35:41,870] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-09-01 13:35:41,874] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-09-01 13:35:41,884] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 257) (kafka.controller.KafkaController)
[2020-09-01 13:35:41,898] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 13:35:41,963] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-09-01 13:35:41,980] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-09-01 13:35:41,982] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-09-01 13:35:41,983] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-09-01 13:35:41,983] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trump, MyTopic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-09-01 13:35:41,984] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-09-01 13:35:42,007] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-09-01 13:35:42,008] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-09-01 13:35:42,008] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-09-01 13:35:42,009] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-09-01 13:35:42,011] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-09-01 13:35:42,027] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 13:35:42,036] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 13:35:42,036] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-01 13:35:42,084] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 13:35:42,086] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=trump,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=MyTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 13:35:42,087] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 13:35:42,092] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 13:35:42,094] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, MyTopic-0 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, trump-0 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 13:35:42,095] INFO [Controller id=1] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2020-09-01 13:35:42,100] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 13:35:42,101] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-09-01 13:35:42,102] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-09-01 13:35:42,103] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-09-01 13:35:42,104] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-09-01 13:35:42,145] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-09-01 13:35:47,148] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:35:47,150] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:35:47,171] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:35:47,175] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:40:47,178] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:40:47,178] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:40:47,182] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:40:47,182] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:45:47,184] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:45:47,184] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:45:47,197] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:45:47,198] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:50:47,199] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:50:47,200] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:50:47,208] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:50:47,208] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 13:55:47,208] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 13:55:47,208] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 13:55:47,213] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 13:55:47,213] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:00:47,215] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:00:47,219] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:00:47,226] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:00:47,227] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:05:47,229] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:05:47,229] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:05:47,236] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:05:47,236] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:10:47,238] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:10:47,239] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:10:47,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:10:47,248] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:15:47,249] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:15:47,249] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:15:47,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:15:47,260] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:20:47,261] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:20:47,261] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:20:47,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:20:47,270] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:25:47,274] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:25:47,274] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:25:47,282] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:25:47,282] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:30:47,285] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:30:47,285] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:30:47,297] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:30:47,318] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:35:47,321] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:35:47,322] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:35:47,332] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:35:47,332] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:40:47,333] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:40:47,334] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:40:47,345] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:40:47,345] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:45:47,348] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:45:47,348] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:45:47,352] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:45:47,352] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:50:47,354] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:50:47,355] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:50:47,366] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:50:47,366] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 14:55:47,368] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 14:55:47,368] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 14:55:47,372] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 14:55:47,372] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 15:00:47,374] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 15:00:47,378] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 15:00:47,386] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 15:00:47,386] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 15:05:47,387] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 15:05:47,388] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 15:05:47,398] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 15:05:47,398] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 15:10:47,400] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 15:10:47,400] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 15:10:47,409] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 15:10:47,409] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 16:48:41,540] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 16:48:41,542] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 16:48:41,545] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 16:48:41,546] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 16:53:41,548] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 16:53:41,548] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 16:53:41,559] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 16:53:41,559] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 16:58:41,560] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 16:58:41,560] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 16:58:41,568] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 16:58:41,569] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:03:41,571] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:03:41,574] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:03:41,586] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:03:41,586] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:08:41,587] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:08:41,588] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:08:41,601] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:08:41,601] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:13:41,602] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:13:41,602] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:13:41,611] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:13:41,611] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:18:41,615] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:18:41,615] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:18:41,626] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:18:41,626] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:23:41,630] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:23:41,631] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:23:41,651] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:23:41,652] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:28:41,653] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:28:41,653] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:28:41,663] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:28:41,664] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:33:41,666] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:33:41,666] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:33:41,675] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:33:41,676] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:38:41,678] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-01 17:38:41,678] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-01 17:38:41,688] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-01 17:38:41,688] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-01 17:39:19,930] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-09-01 17:39:19,931] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-09-01 17:39:19,933] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-09-01 17:39:19,950] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),MyTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),trump-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-09-01 17:39:24,709] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 17:39:24,714] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 17:39:24,714] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-01 17:39:24,717] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-09-01 17:39:24,719] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-01 17:39:24,725] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-09-01 17:39:24,729] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-09-01 17:39:24,729] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-09-01 17:39:24,730] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-09-01 17:39:24,731] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-09-01 17:39:24,739] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
