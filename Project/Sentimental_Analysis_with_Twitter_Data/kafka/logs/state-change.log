[2020-08-31 09:20:52,462] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-08-31 09:23:59,567] INFO [Controller id=1 epoch=1] Changed partition MyTopic-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:23:59,567] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 09:23:59,571] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 09:23:59,629] INFO [Controller id=1 epoch=1] Changed partition MyTopic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:23:59,631] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2020-08-31 09:23:59,633] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 1 partitions (state.change.logger)
[2020-08-31 09:23:59,634] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 09:23:59,638] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 1 partitions (state.change.logger)
[2020-08-31 09:23:59,657] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2020-08-31 09:23:59,767] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:23:59,845] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
[2020-08-31 09:42:11,779] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,779] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,779] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,779] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,779] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,779] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,780] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,780] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,780] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,780] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,780] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,780] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,780] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,781] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,781] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,782] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,783] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,784] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,785] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,785] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,785] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,785] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,785] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,785] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 09:42:11,785] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 09:42:11,788] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 09:42:12,215] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,216] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,216] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,216] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,216] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,216] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,216] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,217] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,218] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,219] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,220] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,221] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,221] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 09:42:12,221] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 50 become-leader and 0 become-follower partitions (state.change.logger)
[2020-08-31 09:42:12,222] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 50 partitions (state.change.logger)
[2020-08-31 09:42:12,225] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 09:42:12,234] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 50 partitions (state.change.logger)
[2020-08-31 09:42:12,288] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 1 as part of the become-leader transition for 50 partitions (state.change.logger)
[2020-08-31 09:42:12,333] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,410] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,452] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,496] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,539] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,617] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,664] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,707] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,750] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,827] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,873] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,917] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:12,983] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,063] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,137] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,194] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,255] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,303] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,347] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,391] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,467] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,523] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,589] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,637] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,716] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,760] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,803] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,883] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,944] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:13,993] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:14,064] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:14,119] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:14,173] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:14,219] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:14,263] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 09:42:14,473] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-3 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,481] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-18 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,482] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-41 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,482] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-10 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,483] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-33 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,484] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-48 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,484] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-19 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,485] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-34 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,485] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-4 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,486] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-11 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,486] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-26 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,486] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-49 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,487] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-39 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,488] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-9 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,488] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-24 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,488] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-31 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,490] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-46 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,490] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-1 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,491] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-16 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,492] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-2 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,492] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-25 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,493] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-40 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,494] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-47 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,495] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-17 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,495] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-32 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,495] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-37 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,496] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-7 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,496] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-22 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,496] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-29 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,497] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-44 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,498] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-14 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,498] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-23 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,499] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-38 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,500] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-8 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,500] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-45 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,501] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-15 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,501] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-30 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,502] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-0 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,502] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-35 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,503] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-5 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,503] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-20 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,504] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-27 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,505] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-42 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,505] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-12 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,506] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-21 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,507] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-36 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,508] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-6 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,510] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-43 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,511] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-13 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,511] ERROR [Broker id=1] Error while processing LeaderAndIsr request correlationId 3 received from controller 1 epoch 1 for partition __consumer_offsets-28 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:125)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:65)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:457)
	at kafka.log.Log.recoverLog(Log.scala:824)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:723)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2351)
	at kafka.log.Log.loadSegments(Log.scala:723)
	at kafka.log.Log.<init>(Log.scala:287)
	at kafka.log.Log$.apply(Log.scala:2485)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:779)
	at kafka.cluster.Partition.createLog(Partition.scala:322)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:297)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:499)
	at kafka.cluster.Partition.makeLeader(Partition.scala:485)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1441)
	at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:587)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:475)
	at kafka.server.ReplicaManager.makeLeaders(ReplicaManager.scala:1439)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1317)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:227)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:136)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2020-08-31 09:42:14,525] ERROR [Controller id=1] Received error UNKNOWN_SERVER_ERROR in LeaderAndIsr response LeaderAndIsrResponseData(errorCode=-1, partitionErrors=[LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=13, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=46, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=9, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=42, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=21, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=17, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=30, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=26, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=5, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=38, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=1, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=34, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=16, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=45, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=12, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=41, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=24, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=20, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=49, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=0, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=29, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=25, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=8, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=37, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=4, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=33, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=15, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=48, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=11, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=44, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=23, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=19, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=32, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=28, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=7, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=40, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=3, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=36, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=47, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=14, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=43, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=10, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=22, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=18, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=31, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=27, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=39, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=6, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=35, errorCode=-1), LeaderAndIsrPartitionError(topicName='__consumer_offsets', partitionIndex=2, errorCode=-1)]) from broker 1 (state.change.logger)
[2020-08-31 09:42:14,527] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2020-08-31 09:52:28,038] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 10:00:22,737] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-08-31 10:00:22,814] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 51 become-leader and 0 become-follower partitions (state.change.logger)
[2020-08-31 10:00:22,820] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 51 partitions (state.change.logger)
[2020-08-31 10:00:22,879] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 51 partitions (state.change.logger)
[2020-08-31 10:00:22,932] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 2 as part of the become-leader transition for 51 partitions (state.change.logger)
[2020-08-31 10:00:22,974] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,022] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,060] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,094] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,127] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,159] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,194] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,237] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,269] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,325] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,359] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,392] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,425] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,459] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,493] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,527] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,558] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,592] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,625] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,658] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,691] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,737] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,770] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,802] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,847] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,897] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,931] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,964] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:23,997] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,051] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,086] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,118] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,151] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,186] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,217] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,263] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,337] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,401] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,475] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,511] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,557] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,599] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,658] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,700] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,737] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,746] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,789] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,831] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,889] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:24,978] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:25,045] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 10:00:25,120] INFO [Broker id=1] Add 51 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2020-08-31 10:01:29,983] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 14:20:37,926] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-08-31 14:20:38,111] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 1 with 51 become-leader and 0 become-follower partitions (state.change.logger)
[2020-08-31 14:20:38,116] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 51 partitions (state.change.logger)
[2020-08-31 14:20:38,322] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 51 partitions (state.change.logger)
[2020-08-31 14:20:38,397] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 3 as part of the become-leader transition for 51 partitions (state.change.logger)
[2020-08-31 14:20:38,423] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,464] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,501] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,535] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,570] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,614] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,647] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,681] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,712] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,746] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,780] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,815] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,848] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,880] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,914] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,948] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:38,982] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,035] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,498] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,652] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 2 with high watermark 2 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,655] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,707] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,741] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,784] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,817] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,852] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,885] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,939] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:39,972] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,006] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,039] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,096] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,140] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,190] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,223] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,255] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,289] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,323] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,367] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:40,842] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,060] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,145] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,193] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,226] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,259] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 8 with high watermark 8 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,262] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,303] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,367] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,700] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,733] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,765] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 14:20:41,914] INFO [Broker id=1] Add 51 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2020-08-31 15:13:16,829] INFO [Controller id=1 epoch=3] Changed partition trump-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2020-08-31 15:13:16,830] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 15:13:16,834] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 15:13:16,907] INFO [Controller id=1 epoch=3] Changed partition trump-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2020-08-31 15:13:16,907] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2020-08-31 15:13:16,908] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 1 partitions (state.change.logger)
[2020-08-31 15:13:16,908] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-08-31 15:13:16,915] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2020-08-31 15:13:16,922] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2020-08-31 15:13:16,960] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-08-31 15:13:17,017] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 4 (state.change.logger)
[2020-08-31 16:11:16,126] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-08-31 16:11:16,199] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-08-31 16:11:16,200] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-08-31 16:11:16,207] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition trump-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition MyTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-13 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-42 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-21 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,212] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-30 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-5 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-45 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-12 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-20 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,213] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-15 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-28 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,214] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-36 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-43 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-27 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-6 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-35 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,215] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:11:16,229] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2020-08-31 16:42:33,385] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-08-31 16:42:33,398] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-08-31 16:42:33,398] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-08-31 16:42:33,402] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-08-31 16:42:33,402] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition trump-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,402] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition MyTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,402] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-13 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,402] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,402] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,402] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-42 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-21 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-30 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-5 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-45 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,425] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-12 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-20 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-15 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,426] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-28 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-36 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-43 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-27 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-6 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,427] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-35 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,428] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-08-31 16:42:33,435] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-09-01 09:41:49,665] INFO [Controller id=1 epoch=6] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-01 09:41:49,751] INFO [Controller id=1 epoch=6] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-01 09:41:49,754] INFO [Controller id=1 epoch=6] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-01 09:41:49,944] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-01 09:41:50,017] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 6 as part of the become-leader transition for 52 partitions (state.change.logger)
[2020-09-01 09:41:50,077] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 2 with high watermark 2 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,084] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,147] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,215] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,270] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,325] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,381] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,434] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,481] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,526] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,601] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,646] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,691] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,756] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,809] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,857] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,860] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,900] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,956] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:50,959] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,010] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,013] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,070] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,139] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,192] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,248] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,303] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,370] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,431] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,780] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,783] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,848] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,920] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:51,977] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,055] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,111] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,113] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,163] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,218] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,288] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,365] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,441] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,496] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,562] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,607] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,799] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 575 with high watermark 575 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:52,803] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:53,234] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:53,280] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:53,323] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:53,391] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:53,454] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 09:41:53,635] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2020-09-01 10:12:49,821] INFO [Controller id=1 epoch=6] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-09-01 10:30:52,127] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-01 10:30:52,193] INFO [Controller id=1 epoch=7] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-01 10:30:52,257] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-01 10:30:52,407] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-01 10:30:52,464] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 7 as part of the become-leader transition for 52 partitions (state.change.logger)
[2020-09-01 10:30:52,476] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:52,482] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:52,482] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,304] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,340] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,382] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,416] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,448] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,482] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,515] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,559] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,696] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,745] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,794] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,827] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,860] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,861] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,894] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,897] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,898] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,940] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,943] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:53,991] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,028] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,084] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,149] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,195] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,242] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,639] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,672] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:54,673] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,040] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,106] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,159] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,579] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,676] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,678] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,720] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,781] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,826] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,881] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,939] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:55,978] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,011] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,201] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,417] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 1790 with high watermark 1790 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,423] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,472] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,525] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,580] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,924] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:56,968] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 10:30:57,175] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 2 (state.change.logger)
[2020-09-01 11:54:52,447] INFO [Controller id=1 epoch=8] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-01 11:54:52,471] INFO [Controller id=1 epoch=8] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-01 11:54:52,473] INFO [Controller id=1 epoch=8] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-01 11:54:52,477] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition trump-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition MyTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-13 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-42 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-21 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-30 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-5 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,481] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-45 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-12 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-20 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,482] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-15 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-28 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-36 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-43 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,483] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,484] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-27 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,484] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,484] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-6 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,484] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-35 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,484] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 8 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2020-09-01 11:54:52,494] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2020-09-01 13:34:55,843] INFO [Controller id=1 epoch=8] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-09-01 13:35:42,016] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-01 13:35:42,080] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-01 13:35:42,083] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-01 13:35:42,147] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-01 13:35:42,197] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 9 as part of the become-leader transition for 52 partitions (state.change.logger)
[2020-09-01 13:35:42,210] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,216] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 8 with high watermark 8 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,216] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,276] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,311] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,345] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,399] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,433] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,466] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,523] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,555] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,599] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,632] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,687] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,721] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,755] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,757] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,808] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,810] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,811] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,812] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,814] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,855] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,916] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,947] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:42,981] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,013] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,047] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,080] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,114] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,116] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,119] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,174] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,208] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,241] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,571] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,574] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,576] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,639] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,671] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,704] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,706] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,747] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,791] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,826] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,881] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 3160 with high watermark 3160 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,883] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,946] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:43,980] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:44,014] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:44,070] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:44,124] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 13:35:44,262] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2020-09-01 17:39:19,944] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-09-01 19:46:57,814] INFO [Controller id=1 epoch=10] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-01 19:46:57,901] INFO [Controller id=1 epoch=10] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-01 19:46:57,905] INFO [Controller id=1 epoch=10] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-01 19:46:58,000] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-01 19:46:58,085] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 10 as part of the become-leader transition for 52 partitions (state.change.logger)
[2020-09-01 19:46:58,112] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,117] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 8 with high watermark 8 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,118] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,172] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,205] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,237] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,272] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,305] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,306] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,338] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,371] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,372] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,404] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,455] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,568] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,600] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,603] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,605] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,608] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,611] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,612] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,614] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,615] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,653] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,686] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,720] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,753] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,812] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,844] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,878] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,882] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,884] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,941] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:58,984] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,026] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,075] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,077] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,079] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,118] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,173] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,207] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,207] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,239] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,240] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,275] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,307] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 3917 with high watermark 3917 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,308] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,340] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,371] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,406] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,440] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,474] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-01 19:46:59,567] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 10 with correlation id 2 (state.change.logger)
[2020-09-01 19:50:51,356] INFO [Controller id=1 epoch=10] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-09-03 10:09:27,336] INFO [Controller id=1 epoch=11] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-03 10:09:27,454] INFO [Controller id=1 epoch=11] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-03 10:09:27,457] INFO [Controller id=1 epoch=11] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-03 10:09:27,594] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-03 10:09:27,682] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 11 as part of the become-leader transition for 52 partitions (state.change.logger)
[2020-09-03 10:09:27,708] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 5 with high watermark 5 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,717] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 8 with high watermark 8 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,718] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,771] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,824] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,879] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,911] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,945] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,948] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:27,991] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,034] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,037] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,075] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,109] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,142] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,175] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,176] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,177] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,179] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,179] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,181] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,183] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,184] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 2 with high watermark 2 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,186] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,237] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,270] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,303] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,336] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 2 with high watermark 2 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,338] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,369] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,370] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,371] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,402] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,436] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,469] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,502] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 5 with high watermark 5 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,503] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,504] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,537] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,570] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,603] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,606] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,648] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,651] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,693] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,726] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 3977 with high watermark 3977 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,729] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,771] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,813] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,848] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,882] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:28,937] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-03 10:09:29,080] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 11 with correlation id 2 (state.change.logger)
[2020-09-03 11:21:53,716] INFO [Controller id=1 epoch=11] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2020-09-04 16:39:37,115] INFO [Controller id=1 epoch=12] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-04 16:39:37,210] INFO [Controller id=1 epoch=12] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-04 16:39:37,216] INFO [Controller id=1 epoch=12] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-04 16:39:37,831] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-04 16:39:37,952] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 12 as part of the become-leader transition for 52 partitions (state.change.logger)
[2020-09-04 16:39:37,978] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:37,988] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 8 with high watermark 8 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:37,989] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,061] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,096] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,097] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,152] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,155] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,157] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,195] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,228] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,230] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,232] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 340 with high watermark 340 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,234] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,273] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,306] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,309] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,312] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,314] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,316] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,318] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,319] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,321] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,323] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,361] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,394] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,444] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,539] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,543] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,582] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,584] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,587] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,627] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,672] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,715] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,748] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,751] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,753] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,792] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,837] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,882] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,885] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,925] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,928] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:38,969] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,031] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 3977 with high watermark 3977 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,035] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,038] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,041] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,044] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,085] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,118] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-04 16:39:39,247] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 12 with correlation id 2 (state.change.logger)
[2020-09-07 07:40:34,469] INFO [Controller id=1 epoch=13] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2020-09-07 07:40:34,536] INFO [Controller id=1 epoch=13] Sending LeaderAndIsr request to broker 1 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-07 07:40:34,539] INFO [Controller id=1 epoch=13] Sending UpdateMetadata request to brokers HashSet(1) for 52 partitions (state.change.logger)
[2020-09-07 07:40:34,710] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 52 partitions (state.change.logger)
[2020-09-07 07:40:34,778] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 13 as part of the become-leader transition for 52 partitions (state.change.logger)
[2020-09-07 07:40:34,822] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,829] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 8 with high watermark 8 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,830] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,888] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,922] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,922] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,970] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,971] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:34,972] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,026] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,082] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,083] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,083] INFO [Broker id=1] Leader trump-0 starts at leader epoch 0 from offset 382 with high watermark 382 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,085] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,148] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,214] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,215] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,216] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,216] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,217] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,218] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,218] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,219] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,220] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,282] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,384] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,495] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,586] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,588] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,718] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,719] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 9 with high watermark 9 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,721] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,806] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,884] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:35,961] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,027] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,029] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 6 with high watermark 6 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,031] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,115] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,214] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,287] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,289] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,424] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,425] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,472] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,570] INFO [Broker id=1] Leader MyTopic-0 starts at leader epoch 0 from offset 3977 with high watermark 3977 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,571] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,572] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,572] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 3 with high watermark 3 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,573] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,643] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,785] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2020-09-07 07:40:36,898] INFO [Broker id=1] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 13 with correlation id 2 (state.change.logger)
[2020-09-07 08:07:45,773] INFO [Controller id=1 epoch=13] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
