[2020-09-03 10:09:04,739] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-09-03 10:09:27,031] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-03 10:09:27,116] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 11 and epoch zk version is now 11 (kafka.controller.KafkaController)
[2020-09-03 10:09:27,117] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-09-03 10:09:27,125] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-09-03 10:09:27,144] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-09-03 10:09:27,150] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-09-03 10:09:27,192] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 295) (kafka.controller.KafkaController)
[2020-09-03 10:09:27,215] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-03 10:09:27,286] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-09-03 10:09:27,315] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-09-03 10:09:27,317] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-09-03 10:09:27,318] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-09-03 10:09:27,318] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trump, MyTopic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-09-03 10:09:27,319] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-09-03 10:09:27,328] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-09-03 10:09:27,329] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-09-03 10:09:27,329] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-09-03 10:09:27,330] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-09-03 10:09:27,331] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-09-03 10:09:27,393] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-09-03 10:09:27,418] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-03 10:09:27,420] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-03 10:09:27,457] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-03 10:09:27,458] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=trump,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=MyTopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-09-03 10:09:27,458] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-09-03 10:09:27,464] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-09-03 10:09:27,476] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, MyTopic-0 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, trump-0 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-09-03 10:09:27,476] INFO [Controller id=1] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2020-09-03 10:09:27,483] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-09-03 10:09:27,483] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-09-03 10:09:27,484] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-09-03 10:09:27,484] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-09-03 10:09:27,486] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-09-03 10:09:27,522] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-09-03 10:09:32,526] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:09:32,527] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:09:32,541] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:09:32,544] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:14:32,545] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:14:32,546] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:14:32,552] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:14:32,552] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:19:32,554] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:19:32,555] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:19:32,564] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:19:32,565] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:24:32,567] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:24:32,567] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:24:32,578] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:24:32,578] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:29:32,581] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:29:32,581] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:29:32,585] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:29:32,586] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:34:32,587] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:34:32,588] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:34:32,596] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:34:32,596] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:39:32,599] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:39:32,599] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:39:32,609] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:39:32,610] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:44:32,611] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:44:32,612] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:44:32,620] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:44:32,620] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:49:32,623] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:49:32,624] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:49:32,637] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:49:32,638] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:54:32,639] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:54:32,640] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:54:32,649] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:54:32,649] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 10:59:32,650] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 10:59:32,651] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 10:59:32,660] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 10:59:32,661] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 11:04:32,663] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 11:04:32,666] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 11:04:32,675] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 11:04:32,675] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 11:09:32,680] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 11:09:32,680] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 11:09:32,686] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 11:09:32,686] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 11:14:32,688] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 11:14:32,689] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 11:14:32,697] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 11:14:32,697] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 11:19:32,699] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-03 11:19:32,699] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-03 11:19:32,706] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2020-09-03 11:19:32,706] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-09-03 11:21:53,706] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-09-03 11:21:53,706] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-09-03 11:21:53,707] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-09-03 11:21:53,722] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),MyTopic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),trump-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-09-03 11:21:59,317] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-03 11:21:59,322] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-03 11:21:59,322] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-03 11:21:59,325] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-09-03 11:21:59,327] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-03 11:21:59,333] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-09-03 11:21:59,337] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-09-03 11:21:59,338] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-09-03 11:21:59,339] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-09-03 11:21:59,339] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-09-03 11:21:59,349] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
